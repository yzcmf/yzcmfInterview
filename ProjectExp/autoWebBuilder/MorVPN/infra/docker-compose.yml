version: '3.8'

services:
  backend:
    build:
      context: ../backend
      dockerfile: ../infra/Dockerfile.backend
    container_name: backend
    env_file:
      - ../backend/.env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - appnet

  frontend:
    build:
      context: ../frontend-app
      dockerfile: ../infra/Dockerfile.frontend
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - appnet

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: vpnuser
      POSTGRES_PASSWORD: vpnpass
      POSTGRES_DB: trustvpn
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - appnet

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - appnet

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - appnet

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - ../monitoring/grafana-dashboards.json:/var/lib/grafana/dashboards/grafana-dashboards.json
    depends_on:
      - prometheus
    networks:
      - appnet

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - appnet

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.4
    container_name: logstash
    volumes:
      - ../logging/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
    networks:
      - appnet

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - appnet

volumes:
  pgdata:

networks:
  appnet:
    driver: bridge
